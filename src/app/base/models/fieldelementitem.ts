import { BaseModel } from "@/app/base/models/base.model";

export interface FieldElementItem {
    Name: string;
    Label: string;
    Value: any;
    Type: string;
    PlaceHolder: string;
    Visible: boolean;
    Required: boolean;
    CharacterCasing: string;
    MinLength: number;
    MaxLength: number;
    ReadOnly: boolean;
    ShowPrefix: boolean;
    Prefix: string;
    ShowSuffix: boolean;
    Suffix: string;
    InputClass: string;
    ColSpanClass: string;
    AlignmentXClass: string;
    AlignmentYClass: string;
    RequiredMessage: string;
    ShowIcon: boolean;
    Icon: string;
    IconColor: string;
    LabelStyle: string;
    FormatValue: string;
    ResourceUrl: string;
    BodyResourceUrl: any;
    Fields: Array<FieldElementItem>;
    GridVisible: boolean;
    RefId: string;
    Action: string;
    Class: string;
    DecimalPlaces: number;
    ThousandsSeparator: boolean;
    ShowLabel: boolean;
}

export class FieldElementItem extends BaseModel {
    Name: string;
    Label: string;
    Value: any;
    Type: string;
    PlaceHolder: string;
    Visible: boolean;
    Required: boolean;
    CharacterCasing: string;
    MinLength: number;
    MaxLength: number;
    ReadOnly: boolean;
    ShowPrefix: boolean;
    Prefix: string;
    ShowSuffix: boolean;
    Suffix: string;
    InputClass: string;
    ColSpanClass: string;
    AlignmentXClass: string;
    AlignmentYClass: string;
    RequiredMessage: string;
    ShowIcon: boolean;
    Icon: string;
    IconColor: string;
    LabelStyle: string;
    FormatValue: string;
    ResourceUrl: string;
    BodyResourceUrl: any;
    Fields: Array<FieldElementItem>;
    GridVisible: boolean;
    RefId: string;
    Action: string;
    Class: string;
    DecimalPlaces: number;
    ThousandsSeparator: boolean;
    ShowLabel: boolean;

    constructor(data: Partial<FieldElementItem>) {
        super(data);
        this.Id = data.Id || '';
        this.Name = data.Name || '';
        this.Label = data.Label || '';
        this.Value = data.Value || '';
        this.Type = data.Type || 'text';
        this.PlaceHolder = data.PlaceHolder || '';
        this.Visible = data.Visible !== undefined ? data.Visible : false;
        this.Required = data.Required !== undefined ? data.Required : false;
        this.CharacterCasing = data.CharacterCasing || 'normal';
        this.MinLength = data.MinLength || -1;
        this.MaxLength = data.MaxLength || 0;
        this.ReadOnly = data.ReadOnly !== undefined ? data.ReadOnly : false;
        this.ShowPrefix = data.ShowPrefix !== undefined ? data.ShowPrefix : false;
        this.Prefix = data.Prefix || '';
        this.ShowSuffix = data.ShowSuffix !== undefined ? data.ShowSuffix : false;
        this.Suffix = data.Suffix || '';
        this.InputClass = data.InputClass || '';
        this.ColSpanClass = data.ColSpanClass || '';
        this.AlignmentXClass = data.AlignmentXClass || '';
        this.AlignmentYClass = data.AlignmentYClass || '';
        this.RequiredMessage = data.RequiredMessage || '';
        this.ShowIcon = data.ShowIcon || false;
        this.Icon = data.Icon || 'fa-solid fa-ban';
        this.IconColor = data.IconColor || 'text-slate-600';
        this.LabelStyle = data.LabelStyle || 'text-slate-600';
        this.FormatValue = data.FormatValue || '';
        this.ResourceUrl = data.ResourceUrl || '';
        this.BodyResourceUrl = data.ResourceUrl || null;
        this.Fields = data.Fields || [];
        this.GridVisible = data.GridVisible || false;
        this.RefId = data.RefId || '';
        this.Action = data.Action || '';
        this.Class = data.Class || '';
        this.DecimalPlaces = data.DecimalPlaces || 0;
        this.ThousandsSeparator = data.ThousandsSeparator || false;
        this.ShowLabel = data.ShowLabel || true;
    }
}
